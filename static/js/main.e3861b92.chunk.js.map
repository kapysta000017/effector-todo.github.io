{"version":3,"sources":["assets/img/list.svg","assets/img/add.svg","assets/img/remove.svg","assets/img/edit.svg","assets/img/check.svg","components/Page/modelLists.js","components/Page/modelTasks.js","assets/img/close.svg","components/ui/InputTodo.jsx","components/ui/AddItem.jsx","components/Page/Page.jsx","App.js","index.js"],"names":["GateLists","createGate","fetchLists","createEffect","a","axios","get","fetchColors","sample","clock","open","target","$lists","createStore","on","doneData","_","data","$error","failData","response","status","$colors","changeInputList","createEvent","fetchAddTodo","params","post","$inputValue","value","reset","onSelectColor","$color","color","onAddTodo","fetchRemoveList","id","forEach","element","delete","removeList","map","source","fn","todo","title","state","lists","filter","list","fetchRenameTitle","put","renameTitle","newTitle","GateItems","fetchItems","$errorItems","$items","guard","fetchRenameCheck","listId","items","item","fetchRemoveItem","removeItem","removeItemId","changeInputItem","onAddItem","fetchAddItem","completed","text","$inputValueItem","InputTodo","setActive","isLoadingAdd","useState","select","setSelect","colors","useStore","inputValue","className","onClick","src","closeSvg","alt","classNames","name","type","onChange","e","placeholder","disabled","trim","AddItem","inputValueItem","loading","pending","active","onClickAddItem","addSvg","Page","path","component","Tasks","Lists","useGate","isLoading","error","history","useHistory","listSvg","tagName","localName","push","removeSvg","window","confirm","match","prompt","onRenameTitle","editSvg","checked","htmlFor","checkSvg","location","pathname","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3861b92.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/list.a8982468.svg\";","export default __webpack_public_path__ + \"static/media/add.7e537346.svg\";","export default __webpack_public_path__ + \"static/media/remove.c130db59.svg\";","export default __webpack_public_path__ + \"static/media/edit.5be2348c.svg\";","export default __webpack_public_path__ + \"static/media/check.4b7b1262.svg\";","import { createStore, createEffect, sample, createEvent, guard } from 'effector'\r\nimport { createGate } from 'effector-react'\r\nimport axios from 'axios'\r\n\r\nexport const GateLists = createGate()\r\nexport const fetchLists = createEffect(async () => await axios.get('https://6047f10db801a40017ccd2ba.mockapi.io/lists'))\r\nconst fetchColors = createEffect(async () => await axios.get('https://6047f10db801a40017ccd2ba.mockapi.io/colors'))\r\n\r\nsample({\r\n  clock: GateLists.open,\r\n  target: [fetchLists, fetchColors]\r\n})\r\nexport const $lists = createStore([]).on(fetchLists.doneData, (_, { data }) => data)\r\nexport const $error = createStore(null).on(fetchLists.failData, (_, { response }) => response.status)\r\nexport const $colors = createStore([]).on(fetchColors.doneData, (_, { data }) => data)\r\n\r\nexport const changeInputList = createEvent()\r\nexport const fetchAddTodo = createEffect(async (params) => await axios.post('https://6047f10db801a40017ccd2ba.mockapi.io/lists', params))\r\nexport const $inputValue = createStore('').on(changeInputList, (_, value) => value).reset(fetchAddTodo)\r\nexport const onSelectColor = createEvent()\r\nconst $color = createStore(null).on(onSelectColor, (_, color) => color)\r\nexport const onAddTodo = createEvent()\r\n\r\nexport const fetchRemoveList = createEffect(async (id) => {\r\n  const { data } = await axios.get(`https://6047f10db801a40017ccd2ba.mockapi.io/lists/${id}/items`)\r\n  await data.forEach(element => axios.delete(`https://6047f10db801a40017ccd2ba.mockapi.io/lists/${id}/items/${element.id}`))\r\n  return await axios.delete(`https://6047f10db801a40017ccd2ba.mockapi.io/lists/${id}`)\r\n})\r\nconst removeList = fetchRemoveList.map((id) => id)\r\n\r\n\r\nsample({\r\n  clock: onAddTodo,\r\n  source: $color,\r\n  fn: (color, todo) => ({ title: todo, color: color }),\r\n  target: fetchAddTodo\r\n})\r\n\r\nsample({\r\n  clock: fetchAddTodo.doneData,\r\n  source: $lists,\r\n  fn: (state, { data }) => [...state, data],\r\n  target: $lists\r\n})\r\n\r\nsample({\r\n  clock: removeList,\r\n  source: $lists,\r\n  fn: (lists, id) => lists.filter(list => list.id !== id),\r\n  target: $lists\r\n})\r\n\r\n\r\nexport const fetchRenameTitle = createEffect(async (params) => await axios.put(`https://6047f10db801a40017ccd2ba.mockapi.io/lists/${params.id}`, { ...params }))\r\nconst renameTitle = fetchRenameTitle.map(params => params)\r\nsample({\r\n  clock: renameTitle,\r\n  source: $lists,\r\n  fn: (lists, newTitle) => lists.map(list => list.id === newTitle.id ? { ...list, title: newTitle.title } : list),\r\n  target: $lists\r\n})","import { createStore, createEffect, sample, createEvent, guard } from 'effector'\r\nimport { createGate } from 'effector-react'\r\nimport axios from 'axios'\r\n\r\nexport const GateItems = createGate()\r\nexport const fetchItems = createEffect(async (id) => await axios.get(`https://6047f10db801a40017ccd2ba.mockapi.io/lists/${id}/items`))\r\nexport const $errorItems = createStore(null).on(fetchItems.failData, (_, { response }) => response.status)\r\nexport const $items = createStore([]).on(fetchItems.doneData, (_, { data }) => data)\r\nguard({\r\n  source: GateItems.state,\r\n  filter: id => typeof (id) === \"string\",\r\n  target: fetchItems\r\n})\r\n\r\nexport const fetchRenameCheck = createEffect(async (params) => await axios.put((`https://6047f10db801a40017ccd2ba.mockapi.io/lists/${params.listId}/items/${params.id}`), params))\r\nsample({\r\n  clock: fetchRenameCheck,\r\n  source: $items,\r\n  fn: (items, params) => items.map(item => item.id === params.id ? params : item),\r\n  target: $items\r\n})\r\n\r\nexport const fetchRemoveItem = createEffect(async (params) => await axios.delete(`https://6047f10db801a40017ccd2ba.mockapi.io/lists/${params.listId}/items/${params.id}`))\r\nconst removeItem = fetchRemoveItem.map(({ id }) => id)\r\nsample({\r\n  clock: removeItem,\r\n  source: $items,\r\n  fn: (items, removeItemId) => items.filter(item => item.id !== removeItemId),\r\n  target: $items\r\n})\r\n\r\nexport const changeInputItem = createEvent();\r\nexport const onAddItem = createEvent()\r\nexport const fetchAddItem = createEffect(async (params) => await axios.post(`https://6047f10db801a40017ccd2ba.mockapi.io/lists/${params.id}/items`, { completed: false, text: params.text }))\r\nexport const $inputValueItem = createStore('').on(changeInputItem, (_, value) => value).reset(fetchAddItem)\r\nsample({\r\n  clock: onAddItem,\r\n  target: fetchAddItem\r\n})\r\nsample({\r\n  clock: fetchAddItem.doneData,\r\n  source: $items,\r\n  fn: (items, { data }) => [...items, data],\r\n  target: $items\r\n})","export default __webpack_public_path__ + \"static/media/close.0563020f.svg\";","import { useStore } from 'effector-react';\r\nimport React, { useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport closeSvg from '../../assets/img/close.svg';\r\nimport './InputTodo.scss';\r\n\r\nexport default function InputTodo({\r\n  $inputValue,\r\n  changeInputList,\r\n  $colors,\r\n  onSelectColor,\r\n  onAddTodo,\r\n  setActive,\r\n  isLoadingAdd,\r\n}) {\r\n  const [select, setSelect] = useState(null);\r\n  const onSelectColorId = (id, name) => {\r\n    onSelectColor(name);\r\n    setSelect(() => id);\r\n  };\r\n  const colors = useStore($colors);\r\n  const inputValue = useStore($inputValue);\r\n  const onClickAdd = () => {\r\n    if (inputValue.trim() !== '' && select) {\r\n      onAddTodo(inputValue.trim());\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"sidebar__add\">\r\n      <img onClick={(state) => setActive(!state)} src={closeSvg} alt=\"closebutton\"></img>\r\n      <div className=\"sidebar__add__color\">\r\n        {colors.map((color) => (\r\n          <i\r\n            key={color.id}\r\n            className={classNames(color.name, color.id === select && 'select')}\r\n            onClick={() => onSelectColorId(color.id, color.name)}></i>\r\n        ))}\r\n      </div>\r\n      <div className=\"sidebar__add__input\">\r\n        <input\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={(e) => changeInputList(e.target.value)}\r\n          placeholder=\"Название папки\"></input>\r\n      </div>\r\n      <div>\r\n        <button disabled={isLoadingAdd} onClick={() => onClickAdd()}>\r\n          {isLoadingAdd ? 'Добавить...' : 'Добавить'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport './AddTasks.scss';\r\nimport addSvg from '../../assets/img/add.svg';\r\nimport { useStore } from 'effector-react';\r\n\r\nexport default function AddItem({ changeInputItem, inputValueItem, onAddItem, id, fetchAddItem }) {\r\n  const value = useStore(inputValueItem);\r\n  const loading = useStore(fetchAddItem.pending);\r\n  const [active, setActive] = useState(false);\r\n  const onClickAddItem = (id, value) => {\r\n    if (value.trim() !== '') {\r\n      onAddItem({ id: id, text: value });\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {active ? (\r\n        <div className=\"add__input\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Названия задача\"\r\n            onChange={(e) => changeInputItem(e.target.value)}\r\n            value={value}></input>\r\n          <div className=\"add__buttons\">\r\n            <button className=\"add__buttons__add\" onClick={() => onClickAddItem(id, value.trim())}>\r\n              {loading ? 'Добавить...' : 'Добавить'}\r\n            </button>\r\n            <button onClick={() => setActive((state) => !state)} className=\"add__buttons__close\">\r\n              Закрыть\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"default\" onClick={() => setActive((state) => !state)}>\r\n          <img src={addSvg} alt=\"add\"></img>\r\n          <span className=\"default__add\">Добавить задачу</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import './Lists.scss';\r\nimport './Tasks.scss';\r\nimport listSvg from '../../assets/img/list.svg';\r\nimport addSvg from '../../assets/img/add.svg';\r\nimport removeSvg from '../../assets/img/remove.svg';\r\nimport editSvg from '../../assets/img/edit.svg';\r\nimport checkSvg from '../../assets/img/check.svg';\r\nimport React, { useState } from 'react';\r\nimport { useStore, useGate } from 'effector-react';\r\nimport {\r\n  GateLists,\r\n  $lists,\r\n  $error,\r\n  fetchLists,\r\n  fetchAddTodo,\r\n  $inputValue,\r\n  changeInputList,\r\n  onAddTodo,\r\n  $colors,\r\n  onSelectColor,\r\n  fetchRemoveList,\r\n  fetchRenameTitle,\r\n} from './modelLists';\r\nimport {\r\n  fetchRenameCheck,\r\n  GateItems,\r\n  $items,\r\n  fetchItems,\r\n  $errorItems,\r\n  changeInputItem,\r\n  $inputValueItem,\r\n  onAddItem,\r\n  fetchAddItem,\r\n  fetchRemoveItem,\r\n} from './modelTasks';\r\nimport { useHistory } from 'react-router-dom';\r\nimport InputTodo from '../ui/InputTodo';\r\nimport AddItem from '../ui/AddItem';\r\nimport { Route, BrowserRouter } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n\r\nexport function Page() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Lists />\r\n      <Route path=\"/tasks/:id\" component={Tasks} />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nfunction Lists() {\r\n  const [active, setActive] = useState(false);\r\n  useGate(GateLists);\r\n  const isLoading = useStore(fetchLists.pending);\r\n  const isLoadingAdd = useStore(fetchAddTodo.pending);\r\n  const lists = useStore($lists);\r\n  const error = useStore($error);\r\n  let history = useHistory();\r\n  useGate(GateLists);\r\n  const onClickRoute = (tagName, id) => {\r\n    if (tagName !== 'img') {\r\n      history.push(`/tasks/${id}`);\r\n    }\r\n  };\r\n  const onRemoveList = (id) => {\r\n    if (window.confirm('Точно удалить?')) {\r\n      fetchRemoveList(id);\r\n      history.push('/');\r\n    }\r\n  };\r\n  if (error) {\r\n    return <div>{`Статус ошибки ${error}`}</div>;\r\n  }\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar__titleLists\">\r\n        <img className=\"sidebar__imgTasks\" src={listSvg} alt=\"listSvg\"></img>\r\n        <span>Все задачи</span>\r\n      </div>\r\n      {isLoading ? (\r\n        <h3>Loading...</h3>\r\n      ) : (\r\n        lists.map((list) => (\r\n          <li key={list.id} onClick={(e) => onClickRoute(e.target.localName, list.id)}>\r\n            <i className={`title__${list.color}`}></i>\r\n            <span className=\"sidebar__text\">{list.title}</span>\r\n            <img\r\n              className=\"sidebar__remove\"\r\n              src={removeSvg}\r\n              alt=\"remove\"\r\n              onClick={() => onRemoveList(list.id)}></img>\r\n          </li>\r\n        ))\r\n      )}\r\n      {active ? (\r\n        <InputTodo\r\n          isLoadingAdd={isLoadingAdd}\r\n          setActive={setActive}\r\n          $colors={$colors}\r\n          $inputValue={$inputValue}\r\n          changeInputList={changeInputList}\r\n          onAddTodo={onAddTodo}\r\n          onSelectColor={onSelectColor}\r\n        />\r\n      ) : (\r\n        <div className=\"sidebar__addTodo\" onClick={() => setActive((state) => !state)}>\r\n          <img src={addSvg} alt=\"add\"></img>\r\n          <span>Добавить папку</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Tasks({ match }) {\r\n  let history = useHistory();\r\n  useGate(GateItems, match.params.id);\r\n  const lists = useStore($lists);\r\n  const items = useStore($items);\r\n  const isLoading = useStore(fetchItems.pending);\r\n  const error = useStore($errorItems);\r\n  const onRenameTitle = (list) => {\r\n    const newTitle = window.prompt('Переименовать?', [list.title]);\r\n    fetchRenameTitle({ id: list.id, color: list.color, title: newTitle });\r\n  };\r\n  if (error) {\r\n    return <div>{`Статус ошибки ${error}`}</div>;\r\n  }\r\n  return (\r\n    <div className=\"tasks\">\r\n      {lists.map((list) =>\r\n        list.id === match.params.id ? (\r\n          <div key={list.id}>\r\n            <div className=\"tasks__title\">\r\n              <h2 className={classNames('tasks__title__text', `main__title__${list.color}`)}>\r\n                {list.title}\r\n              </h2>\r\n              <img\r\n                onClick={() => onRenameTitle(list)}\r\n                className=\"tasks__title__edit\"\r\n                src={editSvg}\r\n                alt=\"edit\"></img>\r\n            </div>\r\n            {isLoading ? (\r\n              <h3>loading...</h3>\r\n            ) : (\r\n              items.map((item) => (\r\n                <div key={item.id} className=\"tasks__item\">\r\n                  <input\r\n                    id={`check${item.id}`}\r\n                    className=\"tasks__item__check\"\r\n                    type=\"checkbox\"\r\n                    checked={item.completed}\r\n                    onChange={() =>\r\n                      fetchRenameCheck({ ...item, completed: !item.completed })\r\n                    }></input>\r\n                  <label htmlFor={`check${item.id}`}>\r\n                    <img src={checkSvg} alt=\"check\"></img>\r\n                  </label>\r\n                  <li className=\"tasks__item__text\">{item.text}</li>\r\n                  <img\r\n                    src={removeSvg}\r\n                    alt=\"delete\"\r\n                    onClick={() => fetchRemoveItem({ id: item.id, listId: item.listId })}></img>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        ) : null,\r\n      )}\r\n      {history.location.pathname === '/' ? null : (\r\n        <AddItem\r\n          fetchAddItem={fetchAddItem}\r\n          changeInputItem={changeInputItem}\r\n          inputValueItem={$inputValueItem}\r\n          onAddItem={onAddItem}\r\n          id={match.params.id}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// </Tasks>\r\n// const Tasks = () => {\r\n// post возращается id(key) - обновление стора после запроса\r\n// delete ничего не возращает - обновление стора до запроса\r\n// patch - обновление стора до запроса\r\n// }\r\n","import './App.scss'\r\nimport React from 'react'\r\nimport { Page } from './components/Page'\r\n\r\nfunction App() {\r\n  return (<div className=\"todo\">\r\n    <Page />\r\n  </div>)\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}